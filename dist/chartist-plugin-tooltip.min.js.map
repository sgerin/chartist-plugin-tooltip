{"version":3,"sources":["chartist-plugin-tooltip.js"],"names":["root","factory","define","amd","Chartist","returnExportsGlobal","exports","module","require","this","window","document","show","element","hasClass","className","hide","regex","RegExp","replace","trim","getAttribute","indexOf","next","nextSibling","text","innerText","textContent","defaultOptions","currency","undefined","currencyFormatCallback","tooltipOffset","x","y","anchorToPoint","appendToBody","class","pointClass","tooltipBetweenPoints","plugins","tooltip","options","extend","chart","on","event","selector","callback","$chart","addEventListener","e","target","setPosition","height","$toolTip","offsetHeight","width","offsetWidth","anchorX","anchorY","offsetX","offsetY","style","top","getBoundingClientRect","bottom","pageYOffset","left","pageX","box","pageXOffset","pageY","x2","y2","parseInt","baseVal","value","tooltipSelector","constructor","name","Bar","prototype","Pie","donut","container","querySelector","createElement","body","appendChild","$area","tooltipText","metas","split","values","hasMeta","transformTooltipTextFnc","tooltipFnc","metaIsHTML","txt","innerHTML","join","map","$point","isPieChart","parentNode","seriesName","meta","label"],"mappings":"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","file":"chartist-plugin-tooltip.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"chartist\"], function (Chartist) {\n      return (root.returnExportsGlobal = factory(Chartist));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist\"));\n  } else {\n    root['Chartist.plugins.tooltip'] = factory(Chartist);\n  }\n}(this, function (Chartist) {\n\n  (function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define([\"chartist\"], function (Chartist) {\n        return (root.returnExportsGlobal = factory(Chartist));\n      });\n    } else if (typeof exports === 'object') {\n      // Node. Does not work with strict CommonJS, but\n      // only CommonJS-like enviroments that support module.exports,\n      // like Node.\n      module.exports = factory(require(\"chartist\"));\n    } else {\n      root['Chartist.plugins.tooltip'] = factory(Chartist);\n    }\n  }(this, function (Chartist) {\n\n    /**\n    * Chartist.js plugin to display a data label on top of the points in a line chart.\n    *\n    */\n    /* global Chartist */\n\n    (function (window, document, Chartist) {\n      'use strict';\n\n      var defaultOptions = {\n        currency: undefined,\n        currencyFormatCallback: undefined,\n        tooltipOffset: {\n          x: 0,\n          y: -20\n        },\n        anchorToPoint: false,\n        appendToBody: false,\n        class: undefined,\n        pointClass: 'ct-point',\n        tooltipBetweenPoints: false\n      };\n\n      Chartist.plugins = Chartist.plugins || {};\n      Chartist.plugins.tooltip = function (options) {\n        options = Chartist.extend({}, defaultOptions, options);\n        return function tooltip(chart) {\n          var tooltipSelector = options.tooltipBetweenPoints ? 'ct-slice-line' : options.pointClass;\n          if (chart.constructor.name == Chartist.Bar.prototype.constructor.name) {\n            tooltipSelector = options.tooltipBetweenPoints ? 'ct-slice-line' : 'ct-bar';\n          } else if (chart.constructor.name ==  Chartist.Pie.prototype.constructor.name) {\n            // Added support for donut graph\n            if (chart.options.donut) {\n              tooltipSelector = 'ct-slice-donut';\n            } else {\n              tooltipSelector = 'ct-slice-pie';\n            }\n          }\n\n          var $chart = chart.container;\n          var $toolTip = $chart.querySelector('.chartist-tooltip');\n          if (!$toolTip) {\n            $toolTip = document.createElement('div');\n            $toolTip.className = (!options.class) ? 'chartist-tooltip' : 'chartist-tooltip ' + options.class;\n            if (!options.appendToBody) {\n              $chart.appendChild($toolTip);\n            } else {\n              document.body.appendChild($toolTip);\n            }\n          }\n          var height = $toolTip.offsetHeight;\n          var width = $toolTip.offsetWidth;\n\n          hide($toolTip);\n\n          function on(event, selector, callback) {\n            $chart.addEventListener(event, function (e) {\n              if (!selector || hasClass(e.target, selector))\n              callback(e);\n            });\n          }\n\n          on('mouseover', tooltipSelector, function (event) {\n            if(options.tooltipBetweenPoints) {\n              var $area = event.target;\n              var tooltipText = '';\n              var metas = $area.getAttribute('ct:metas').split(',');\n              var values = $area.getAttribute('ct:values').split(',');\n              var hasMeta = !!metas;\n              if (options.transformTooltipTextFnc && typeof options.transformTooltipTextFnc === 'function') {\n                values = options.transformTooltipTextFnc(values);\n              }\n              if (options.tooltipFnc && typeof options.tooltipFnc === 'function') {\n                tooltipText = options.tooltipFnc(metas, values);\n              } else {\n                if (options.metaIsHTML) {\n                  var txt = document.createElement('textarea');\n                  txt.innerHTML = metas.join('');\n                  metas = txt.value;\n                }\n\n                metas = '<span class=\"chartist-tooltip-meta\">' + metas.join('') + '</span>';\n\n                if (hasMeta) {\n                  tooltipText += metas + '<br>';\n                }\n\n                if (values) {\n                  if (options.currency) {\n                    if (options.currencyFormatCallback != undefined) {\n                      values = options.currencyFormatCallback(values, options);\n                    } else {\n                      values = options.currency + values.map(function(value) {return value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, '$1,')});\n                    }\n                  }\n                  values = '<span class=\"chartist-tooltip-value\">' + values.join(' ') + '</span>';\n                  tooltipText += values;\n                }\n              }\n            } else {\n              var $point = event.target;\n              var tooltipText = '';\n\n              var isPieChart = (chart instanceof Chartist.Pie) ? $point : $point.parentNode;\n              var seriesName = (isPieChart) ? $point.parentNode.getAttribute('ct:meta') || $point.parentNode.getAttribute('ct:series-name') : '';\n              var meta = $point.getAttribute('ct:meta') || seriesName || '';\n              var hasMeta = !!meta;\n              var value = $point.getAttribute('ct:value');\n\n              if (options.transformTooltipTextFnc && typeof options.transformTooltipTextFnc === 'function') {\n                value = options.transformTooltipTextFnc(value);\n              }\n\n              if (options.tooltipFnc && typeof options.tooltipFnc === 'function') {\n                tooltipText = options.tooltipFnc(meta, value);\n              } else {\n                if (options.metaIsHTML) {\n                  var txt = document.createElement('textarea');\n                  txt.innerHTML = meta;\n                  meta = txt.value;\n                }\n\n                meta = '<span class=\"chartist-tooltip-meta\">' + meta + '</span>';\n\n                if (hasMeta) {\n                  tooltipText += meta + '<br>';\n                } else {\n                  // For Pie Charts also take the labels into account\n                  // Could add support for more charts here as well!\n                  if (chart instanceof Chartist.Pie) {\n                    var label = next($point, 'ct-label');\n                    if (label) {\n                      tooltipText += text(label) + '<br>';\n                    }\n                  }\n                }\n\n                if (value) {\n                  if (options.currency) {\n                    if (options.currencyFormatCallback != undefined) {\n                      value = options.currencyFormatCallback(value, options);\n                    } else {\n                      value = options.currency + value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, '$1,');\n                    }\n                  }\n                  value = '<span class=\"chartist-tooltip-value\">' + value + '</span>';\n                  tooltipText += value;\n                }\n              }\n            }\n\n            if(tooltipText) {\n              $toolTip.innerHTML = tooltipText;\n              setPosition(event);\n              show($toolTip);\n\n              // Remember height and width to avoid wrong position in IE\n              height = $toolTip.offsetHeight;\n              width = $toolTip.offsetWidth;\n            }\n          });\n\n          on('mouseout', tooltipSelector, function () {\n            hide($toolTip);\n          });\n\n          on('mousemove', null, function (event) {\n            if (false === options.anchorToPoint)\n            setPosition(event);\n          });\n\n          function setPosition(event) {\n            height = height || $toolTip.offsetHeight;\n            width = width || $toolTip.offsetWidth;\n            var offsetX = - width / 2 + options.tooltipOffset.x\n            var offsetY = - height + options.tooltipOffset.y;\n            var anchorX, anchorY;\n            if (!options.appendToBody) {\n              var box = $chart.getBoundingClientRect();\n              var left = event.pageX - box.left - window.pageXOffset ;\n              var top = event.pageY - box.top - window.pageYOffset ;\n\n              if (true === options.anchorToPoint && event.target.x2 && event.target.y2) {\n                anchorX = parseInt(event.target.x2.baseVal.value);\n                anchorY = parseInt(event.target.y2.baseVal.value);\n              }\n              $toolTip.style.top = (anchorY || top) + offsetY + 'px';\n              $toolTip.style.left = (anchorX || left) + offsetX + 'px';\n            } else {\n              $toolTip.style.top = ($chart.getBoundingClientRect().bottom + height + window.pageYOffset  - 19 + offsetY) + 'px';\n              $toolTip.style.left = event.pageX + offsetX + 'px';\n            }\n          }\n        }\n      };\n\n      function show(element) {\n        if(!hasClass(element, 'tooltip-show')) {\n          element.className = element.className + ' tooltip-show';\n        }\n      }\n\n      function hide(element) {\n        var regex = new RegExp('tooltip-show' + '\\\\s*', 'gi');\n        element.className = element.className.replace(regex, '').trim();\n      }\n\n      function hasClass(element, className) {\n        return (' ' + element.getAttribute('class') + ' ').indexOf(' ' + className + ' ') > -1;\n      }\n\n      function next(element, className) {\n        do {\n          element = element.nextSibling;\n        } while (element && !hasClass(element, className));\n        return element;\n      }\n\n      function text(element) {\n        return element.innerText || element.textContent;\n      }\n\n    } (window, document, Chartist));\n\n    return Chartist.plugins.tooltip;\n\n  }));\n\n  return Chartist.plugins.tooltip;\n\n}));\n"]}